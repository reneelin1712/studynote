{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/pages/errors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ListLink","props","style","display","marginRight","to","children","Header","data","margin","marginBottom","textShadow","backgroundImage","float","site","siteMetadata","title","listStyle","Layout","padding","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"8IAIMA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,IAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAiChBC,EA9BA,SAAC,GAAiB,EAAfD,SAAgB,IACxBE,EAAI,OAaR,OAEJ,yBAAKN,MAAO,CAAEO,OAAO,gBACnB,4BAAQP,MAAO,CAAEQ,aAAa,WAC5B,kBAAC,IAAD,CAAML,GAAG,IAAIH,MAAO,CAAES,WAAW,OAASC,gBAAgB,OAAQC,MAAM,OAAST,YAAY,SAC3F,wBAAIF,MAAO,CAAEC,QAAQ,WAAcK,EAAKM,KAAKC,aAAaC,QAE5D,wBAAId,MAAO,CAAEe,UAAU,SACrB,kBAAC,EAAD,CAAUZ,GAAG,KAAb,QACA,kBAAC,EAAD,CAAUA,GAAG,UAAb,QACA,kBAAC,EAAD,CAAUA,GAAG,YAAb,cCrBOa,IATA,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAH,OAEX,yBAAKJ,MAAO,CAAEO,OAAO,SAAYU,QAAQ,WACrC,kBAAC,EAAD,MACCb,K,kCCPT,4CAIe,4BACX,kBAAC,IAAD,KACI,2C,kCCNR,sGAcyBc,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,6LCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-errors-js-28ca5482bb08f579d9ab.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, Link, graphql  } from \"gatsby\"\n\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\nconst Header = ({ children }) => {\n    const data = useStaticQuery(\n        graphql`\n          query {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `\n      )\n\n\n      return(\n\n  <div style={{ margin: `0.5rem auto`,   }}>\n    <header style={{ marginBottom: `1.5rem` }}>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none`,float: `left` ,marginRight: `1rem`}}>\n        <h3 style={{ display: `inline` }}>{data.site.siteMetadata.title}</h3>\n      </Link>\n      <ul style={{ listStyle: `none`, }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/blog/\">Blog</ListLink>\n        <ListLink to=\"/errors/\">Errors</ListLink>\n      </ul>\n    </header>\n  </div>)\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\n\nconst Layout = ({ children }) => (\n\n    <div style={{ margin: `0 auto`,  padding: `0 1rem` }}>\n        <Header></Header>\n        {children}\n    </div>\n)\n\n\nexport default Layout\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\n\nexport default () =>\n    <Layout>\n        <div>\n        errors!</div>\n    </Layout>\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}